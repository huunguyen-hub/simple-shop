# Generated by Django 3.0.7 on 2020-07-09 07:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('actor_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=245, null=True)),
                ('workingtime', models.TextField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('price_extra', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('available_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_actor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address_id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=128)),
                ('phone', models.CharField(blank=True, max_length=16, null=True)),
                ('mobile', models.CharField(max_length=16)),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswerCustomer',
            fields=[
                ('ans_customer_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField()),
                ('ex_info', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_answer_customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('attribute_id', models.AutoField(primary_key=True, serialize=False)),
                ('color', models.CharField(blank=True, max_length=32, null=True)),
                ('name', models.CharField(max_length=45)),
                ('position', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tbl_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeGroup',
            fields=[
                ('attr_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45, unique=True)),
                ('public_name', models.CharField(max_length=45, unique=True)),
                ('group_type', models.CharField(max_length=6)),
                ('position', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tbl_attribute_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Behavior',
            fields=[
                ('behavior_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('type', models.CharField(blank=True, max_length=7, null=True)),
                ('info', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_behavior',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('cart_id', models.AutoField(primary_key=True, serialize=False)),
                ('owner_id', models.PositiveIntegerField(blank=True, null=True)),
                ('secure_key', models.CharField(max_length=32, unique=True)),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
                ('total_paid', models.CharField(blank=True, max_length=45, null=True)),
                ('total_wrapping', models.CharField(blank=True, max_length=45, null=True)),
                ('total_paid_real', models.CharField(blank=True, max_length=45, null=True)),
                ('status', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_cart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('level_depth', models.PositiveIntegerField()),
                ('active', models.PositiveIntegerField()),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
                ('position', models.PositiveIntegerField()),
                ('is_root_category', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=45)),
                ('description', models.TextField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=45, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=45, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('slug', models.CharField(max_length=45)),
                ('type', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('iso_code', models.CharField(blank=True, max_length=7, null=True)),
                ('date_add', models.DateTimeField(blank=True, null=True)),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('owner_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content', models.TextField()),
                ('attach_file', models.CharField(blank=True, max_length=255, null=True)),
                ('date_add', models.DateTimeField(blank=True, null=True)),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=9)),
                ('status_reason', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tbl_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('contact_id', models.AutoField(primary_key=True, serialize=False)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('email', models.CharField(max_length=128)),
                ('fax', models.CharField(blank=True, max_length=128, null=True)),
                ('tax', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.CharField(blank=True, max_length=128, null=True)),
                ('mobile', models.CharField(blank=True, max_length=128, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('customer_service', models.IntegerField()),
                ('position', models.PositiveIntegerField()),
                ('status', models.PositiveIntegerField(blank=True, null=True)),
                ('is_main', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Csvc',
            fields=[
                ('csvc_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=245, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('price_in_pack', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('available_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_csvc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerMessage',
            fields=[
                ('owner_message_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField()),
                ('user_agent', models.CharField(blank=True, max_length=128, null=True)),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_customer_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerThread',
            fields=[
                ('owner_thread_id', models.AutoField(primary_key=True, serialize=False)),
                ('owner_id', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(max_length=8)),
                ('email', models.CharField(max_length=128)),
                ('token', models.CharField(blank=True, max_length=12, null=True)),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_customer_thread',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomizedData',
            fields=[
                ('customization_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('type', models.IntegerField()),
                ('index', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tbl_customized_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('district_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'tbl_district',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailQueue',
            fields=[
                ('email_queue_id', models.AutoField(primary_key=True, serialize=False)),
                ('from_name', models.CharField(blank=True, max_length=64, null=True)),
                ('from_email', models.CharField(max_length=128)),
                ('to_email', models.CharField(max_length=128)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('max_attempts', models.PositiveIntegerField()),
                ('attempts', models.PositiveIntegerField()),
                ('success', models.IntegerField()),
                ('status', models.IntegerField()),
                ('date_published', models.DateTimeField(blank=True, null=True)),
                ('last_attempt', models.DateTimeField(blank=True, null=True)),
                ('date_sent', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_email_queue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('feature_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('position', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tbl_feature',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureValue',
            fields=[
                ('feature_value_id', models.AutoField(primary_key=True, serialize=False)),
                ('custom', models.PositiveIntegerField(blank=True, null=True)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_feature_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lookup',
            fields=[
                ('lookup_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('code', models.CharField(max_length=128)),
                ('code2', models.CharField(blank=True, max_length=128, null=True)),
                ('type', models.CharField(max_length=128)),
                ('position', models.IntegerField()),
                ('secret', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('manufacturer_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField()),
                ('active', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('description_short', models.TextField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'tbl_manufacturer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('owner_id', models.PositiveIntegerField()),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField()),
                ('private', models.PositiveIntegerField()),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('valid', models.PositiveIntegerField()),
                ('secure_key', models.CharField(max_length=32)),
                ('payment', models.CharField(blank=True, max_length=255, null=True)),
                ('total_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=17, null=True)),
                ('total_wrapping', models.DecimalField(blank=True, decimal_places=2, max_digits=17, null=True)),
                ('total_paid_real', models.DecimalField(blank=True, decimal_places=2, max_digits=17, null=True)),
                ('invoice_date', models.DateTimeField(blank=True, null=True)),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderHistory',
            fields=[
                ('order_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_order_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderInvoice',
            fields=[
                ('order_invoice_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=17, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_order_invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('order_payment_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('order_reference', models.CharField(blank=True, max_length=9, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(max_length=255)),
                ('date_add', models.DateTimeField()),
                ('data_payment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_order_payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderState',
            fields=[
                ('order_state_id', models.AutoField(primary_key=True, serialize=False)),
                ('invoice', models.PositiveIntegerField(blank=True, null=True)),
                ('send_email', models.PositiveIntegerField()),
                ('delivery', models.PositiveIntegerField()),
                ('shipped', models.PositiveIntegerField()),
                ('paid', models.PositiveIntegerField()),
                ('deleted', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('template', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'tbl_order_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pack',
            fields=[
                ('pack_id', models.AutoField(primary_key=True, serialize=False)),
                ('find_item_id', models.CharField(max_length=45)),
                ('class_of_item', models.CharField(blank=True, max_length=45, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('price_in_pack', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
            ],
            options={
                'db_table': 'tbl_pack',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackGroup',
            fields=[
                ('pack_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_short', models.CharField(blank=True, max_length=255, null=True)),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=17, null=True)),
                ('total_paid_real', models.DecimalField(blank=True, decimal_places=2, max_digits=17, null=True)),
                ('available_for_order', models.PositiveIntegerField()),
                ('available_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_pack_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Param',
            fields=[
                ('param_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('label', models.CharField(blank=True, max_length=64, null=True)),
                ('value', models.TextField()),
                ('group', models.CharField(blank=True, max_length=45, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=45, null=True)),
                ('index', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_param',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_add_id', models.PositiveIntegerField(blank=True, null=True)),
                ('user_upd_id', models.PositiveIntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=230)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('content', models.TextField()),
                ('attach_file', models.CharField(blank=True, max_length=255, null=True)),
                ('tags', models.TextField(blank=True, null=True)),
                ('date_add', models.DateTimeField(blank=True, null=True)),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
                ('counting', models.IntegerField()),
                ('comment_state', models.CharField(blank=True, max_length=8, null=True)),
                ('categories', models.CharField(max_length=8)),
                ('status', models.CharField(max_length=9)),
            ],
            options={
                'db_table': 'tbl_post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=3, max_digits=20)),
                ('unity', models.CharField(blank=True, max_length=45, null=True)),
                ('active', models.PositiveIntegerField()),
                ('on_sale', models.PositiveIntegerField()),
                ('available_for_order', models.IntegerField()),
                ('available_date', models.DateTimeField(blank=True, null=True)),
                ('condition', models.CharField(max_length=11)),
                ('show_price', models.IntegerField()),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
                ('slug', models.CharField(blank=True, max_length=128, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_short', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('pro_attribute_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_of_attribute', models.CharField(blank=True, max_length=128, null=True)),
                ('price', models.DecimalField(decimal_places=3, max_digits=20)),
                ('quantity', models.IntegerField()),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
                ('available_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_product_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeAfterCombine',
            fields=[
                ('find_item_id', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('available_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_product_attribute_after_combine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_room', models.CharField(blank=True, max_length=128, null=True)),
                ('name_creator', models.CharField(blank=True, max_length=64, null=True)),
                ('info', models.CharField(blank=True, max_length=256, null=True)),
                ('user_upd_id', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('status_reason', models.TextField(blank=True, null=True)),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_room',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Room4Chat',
            fields=[
                ('room_id4chat', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('status', models.IntegerField(blank=True, null=True)),
                ('date_add', models.DateTimeField()),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
                ('owner_id', models.PositiveIntegerField()),
                ('identity_type', models.CharField(blank=True, max_length=45, null=True)),
                ('identity_object', models.CharField(blank=True, max_length=45, null=True)),
                ('old_content', models.TextField(blank=True, null=True)),
                ('status_reason', models.TextField(blank=True, null=True)),
                ('media', models.CharField(blank=True, max_length=128, null=True)),
                ('type', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'tbl_room4chat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('price_in_pack', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('available_date', models.DateTimeField(blank=True, null=True)),
                ('unity', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'tbl_service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpecificPrice',
            fields=[
                ('specific_price_id', models.AutoField(primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=6, max_digits=20)),
                ('find_item_id', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'tbl_specific_price',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpecificPriceRule',
            fields=[
                ('spec_pri_ru_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('secure_key', models.CharField(max_length=45)),
                ('to', models.DateField(blank=True, null=True)),
                ('from_field', models.DateField(blank=True, db_column='from', null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('remain_qty', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_specific_price_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('email', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=45, null=True)),
                ('last_name', models.CharField(blank=True, max_length=45, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('date_join', models.DateField(blank=True, null=True)),
                ('service', models.CharField(blank=True, max_length=7, null=True)),
                ('limited', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'tbl_subscriber',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
                ('name_en', models.CharField(max_length=45, unique=True)),
                ('frequency', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeRule',
            fields=[
                ('type_rule_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('add_to_item', models.CharField(blank=True, max_length=7, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
            ],
            options={
                'db_table': 'tbl_type_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('ward_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'tbl_ward',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('cart_id', models.OneToOneField(db_column='cart_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Cart')),
                ('find_item_id', models.CharField(max_length=128)),
                ('class_of_item', models.CharField(blank=True, max_length=45, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('unity', models.CharField(blank=True, max_length=45, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
            ],
            options={
                'db_table': 'tbl_cart_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryProduct',
            fields=[
                ('category_id', models.OneToOneField(db_column='category_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Category')),
                ('position', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'tbl_category_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryProductAttribute',
            fields=[
                ('category_id', models.OneToOneField(db_column='category_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Category')),
            ],
            options={
                'db_table': 'tbl_category_product_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customization',
            fields=[
                ('customization_id', models.OneToOneField(db_column='customization_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.CustomizedData')),
                ('quantity', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_customization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureProduct',
            fields=[
                ('feature_id', models.OneToOneField(db_column='feature_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Feature')),
            ],
            options={
                'db_table': 'tbl_feature_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageReaded',
            fields=[
                ('message_id', models.OneToOneField(db_column='message_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Message')),
                ('user_id', models.PositiveIntegerField()),
                ('date_add', models.DateTimeField(blank=True, null=True)),
                ('date_upd', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_message_readed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderInvoicePayment',
            fields=[
                ('order_invoice_id', models.OneToOneField(db_column='order_invoice_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.OrderInvoice')),
            ],
            options={
                'db_table': 'tbl_order_invoice_payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('order_id', models.OneToOneField(db_column='order_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Order')),
                ('find_item_id', models.CharField(max_length=128)),
                ('class_of_item', models.CharField(max_length=45)),
                ('quantity', models.PositiveIntegerField()),
                ('unity', models.CharField(blank=True, max_length=45, null=True)),
                ('price', models.DecimalField(decimal_places=3, max_digits=20)),
                ('total_price', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True)),
                ('original_price', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True)),
            ],
            options={
                'db_table': 'tbl_order_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('post_id', models.OneToOneField(db_column='post_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Post')),
            ],
            options={
                'db_table': 'tbl_post_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeCombination',
            fields=[
                ('attribute_id', models.OneToOneField(db_column='attribute_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Attribute')),
            ],
            options={
                'db_table': 'tbl_product_attribute_combination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeTag',
            fields=[
                ('product_id', models.OneToOneField(db_column='product_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Product')),
                ('frequency', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_product_attribute_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('product_id', models.OneToOneField(db_column='product_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Product')),
            ],
            options={
                'db_table': 'tbl_product_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubscriberPost',
            fields=[
                ('email', models.OneToOneField(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Subscriber')),
                ('status', models.IntegerField(blank=True, null=True)),
                ('date_sent', models.DateField(blank=True, null=True)),
                ('info', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_subscriber_post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubscriberProductAttribute',
            fields=[
                ('email', models.OneToOneField(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.Subscriber')),
                ('pro_attribute_id', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('date_sent', models.DateField(blank=True, null=True)),
                ('info', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_subscriber_product_attribute',
                'managed': False,
            },
        ),
    ]
